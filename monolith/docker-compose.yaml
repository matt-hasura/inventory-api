version: "3.9"

services:
  inventory-api:
    image: igraphql/inventory-monolith:latest
    container_name: inventory-api
    hostname: inventory-api
    restart: always
    environment:
      ACCESS_LOG: "false"
      BASE_PATH: /api/v1
      DATABASE_TYPE: postgres
      LOG_SQL: "true"
      POSTGRES_DATABASE: inventory_management
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD: pgpassword
      POSTGRES_PORT: 5432
      POSTGRES_SCHEMA: public
      POSTGRES_SSL: "false"
      POSTGRES_USERNAME: postgres
    networks:
      - inventory-api
    ports:
      - 443
  
  nginx:
    image: nginx:alpine
    container_name: nginx
    hostname: nginx
    restart: always
    networks:
      - inventory-api
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./source/nginx/certs:/etc/nginx/certs
      - ./source/nginx/common.conf:/etc/nginx/conf.d/common.conf
      - ./source/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./source/nginx/nginx.conf:/etc/nginx/nginx.conf
  
  postgres:
    image: postgres:latest
    container_name: postgres
    hostname: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: pgpassword
    networks:
      - inventory-api
    ports:
      - 5432:5432
    volumes:
      - ./source/init/init.sh:/docker-entrypoint-initdb.d/init.sh
      - ./source/init/init.sql:/var/tmp/init.sql
      - postgres:/var/lib/postgresql/data
  
  swagger-ui:
    image: swaggerapi/swagger-ui:latest
    container_name: swagger-ui
    hostname: swagger-ui
    restart: always
    environment:
      SWAGGER_JSON: /swagger.yaml
    networks:
      - inventory-api
    ports:
      - 8080
    volumes:
      - ./source/swagger/swagger.yaml:/swagger.yaml

networks:
  inventory-api:
    name: inventory-api

volumes:
  postgres:
    name: postgres
